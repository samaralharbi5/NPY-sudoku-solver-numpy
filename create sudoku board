import numpy as np
def create_sudoku_board():
    # Initialize a 9x9 grid with zeros
    board = np.zeros((9, 9), dtype=int)
    return board
def display_board(board):
    for row in board:
        print(" ".join(str(num) if num != 0 else '.' for num in row))
    print()
# Create a Sudoku board
board = create_sudoku_board()

# Display the Sudoku board
print("Initial Sudoku Board:")
display_board(board)
def add_initial_clues(board):
    # Example clues (you can add more or different ones)
    clues = [
        (0, 0, 5), (1, 1, 3), (2, 2, 9),
        (3, 3, 6), (4, 4, 7), (5, 5, 1),
        (6, 6, 8), (7, 7, 2), (8, 8, 4)
    ]
    for row, col, num in clues:
        board[row, col] = num
    return board

# Add clues to the board
board = add_initial_clues(board)

# Display the updated Sudoku board
print("Sudoku Board with Initial Clues:")
display_board(board)
def is_valid(board, row, col, num):
    # Check row
    if num in board[row]:
        return False
    
    # Check column
    if num in board[:, col]:
        return False
    
    # Check 3x3 sub-grid
    start_row, start_col = 3 * (row // 3), 3 * (col // 3)
    if num in board[start_row:start_row+3, start_col:start_col+3]:
        return False
    
    return True
